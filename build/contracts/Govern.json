{
  "contractName": "Govern",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "yesCount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "noCount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "buy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "sell",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_proposalId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_supports",
          "type": "bool"
        }
      ],
      "name": "vote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"yesCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"noCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"sell\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_supports\",\"type\":\"bool\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Interfaces/Govern.sol\":\"Govern\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/ERC20.sol\":{\"keccak256\":\"0x6a1c35c3e3d831323d9c449655e383f95902c4db2292d90c579df3fbc7ae8961\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22f1e7822d7530b2a3492a176508cc012ec83fcd3cfb72a15ee886194583fb67\",\"dweb:/ipfs/QmVKCCz9uyPaKr4nX1BDKE6W9Hed1CU3oH23xX25k1ijkT\"]},\"project:/contracts/Interfaces/Govern.sol\":{\"keccak256\":\"0x20f44eac9addd09801909ec5c2f5dce289b9139d609c9d9e27e4e751e31c3d4f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ca5f5496722bc83e50261b4917369d29fb97d276aee01bf14cce7c479364c8e\",\"dweb:/ipfs/QmYG4RAYrAfrUppsDKHSqTZbR6LzzH7wKVMnfW1zNdJ2RR\"]},\"project:/contracts/Interfaces/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040518060400160405280600681526020016523b7bb32b93760d11b8152506040518060400160405280600381526020016223a7ab60e91b81525081600390805190602001906200006592919062000084565b5080516200007b90600490602084019062000084565b50505062000167565b82805462000092906200012a565b90600052602060002090601f016020900481019282620000b6576000855562000101565b82601f10620000d157805160ff191683800117855562000101565b8280016001018555821562000101579182015b8281111562000101578251825591602001919060010190620000e4565b506200010f92915062000113565b5090565b5b808211156200010f576000815560010162000114565b600181811c908216806200013f57607f821691505b602082108114156200016157634e487b7160e01b600052602260045260246000fd5b50919050565b610d5f80620001776000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063c9d27afe11610066578063c9d27afe14610211578063d96a094a14610226578063dd62ed3e14610239578063e4849b321461024c57600080fd5b806370a08231146101ba57806395d89b41146101e3578063a457c2d7146101eb578063a9059cbb146101fe57600080fd5b806318160ddd116100d357806318160ddd1461017357806323b872dd14610185578063313ce5671461019857806339509351146101a757600080fd5b8063013cf08b146100fa57806306fdde031461013b578063095ea7b314610150575b600080fd5b610121610108366004610b28565b6007602052600090815260409020805460019091015482565b604080519283526020830191909152015b60405180910390f35b61014361025f565b6040516101329190610b41565b61016361015e366004610bb2565b6102f1565b6040519015158152602001610132565b6002545b604051908152602001610132565b610163610193366004610bdc565b610309565b60405160128152602001610132565b6101636101b5366004610bb2565b61032d565b6101776101c8366004610c18565b6001600160a01b031660009081526020819052604090205490565b61014361034f565b6101636101f9366004610bb2565b61035e565b61016361020c366004610bb2565b6103de565b61022461021f366004610c48565b6103ec565b005b610224610234366004610b28565b610499565b610177610247366004610c78565b610538565b61022461025a366004610b28565b610563565b60606003805461026e90610cab565b80601f016020809104026020016040519081016040528092919081815260200182805461029a90610cab565b80156102e75780601f106102bc576101008083540402835291602001916102e7565b820191906000526020600020905b8154815290600101906020018083116102ca57829003601f168201915b5050505050905090565b6000336102ff8185856105fc565b5060019392505050565b600033610317858285610721565b61032285858561079b565b506001949350505050565b6000336102ff8185856103408383610538565b61034a9190610ce6565b6105fc565b60606004805461026e90610cab565b6000338161036c8286610538565b9050838110156103d15760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61032282868684036105fc565b6000336102ff81858561079b565b3360009081526005602052604090205460ff161561040957600080fd5b6000828152600760205260409020811561044b57336000908152602081905260409020548160000160008282546104409190610ce6565b909155506104749050565b3360009081526020819052604090205481600101600082825461046e9190610ce6565b90915550505b33600090815260029190910160205260409020805460ff191691151591909117905550565b6040516323b872dd60e01b815233600482015230602482015260448101829052736b175474e89094c44da98b954eedeac495271d0f906323b872dd90606401602060405180830381600087803b1580156104f257600080fd5b505af1158015610506573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052a9190610d0c565b50610535338261093f565b50565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61056d33826109fe565b60405163a9059cbb60e01b815233600482015260248101829052736b175474e89094c44da98b954eedeac495271d0f9063a9059cbb90604401602060405180830381600087803b1580156105c057600080fd5b505af11580156105d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f89190610d0c565b5050565b6001600160a01b03831661065e5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103c8565b6001600160a01b0382166106bf5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103c8565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b600061072d8484610538565b9050600019811461079557818110156107885760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103c8565b61079584848484036105fc565b50505050565b6001600160a01b0383166107ff5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103c8565b6001600160a01b0382166108615760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103c8565b6001600160a01b038316600090815260208190526040902054818110156108d95760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103c8565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610795565b6001600160a01b0382166109955760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103c8565b80600260008282546109a79190610ce6565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b038216610a5e5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103c8565b6001600160a01b03821660009081526020819052604090205481811015610ad25760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103c8565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101610714565b600060208284031215610b3a57600080fd5b5035919050565b600060208083528351808285015260005b81811015610b6e57858101830151858201604001528201610b52565b81811115610b80576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610bad57600080fd5b919050565b60008060408385031215610bc557600080fd5b610bce83610b96565b946020939093013593505050565b600080600060608486031215610bf157600080fd5b610bfa84610b96565b9250610c0860208501610b96565b9150604084013590509250925092565b600060208284031215610c2a57600080fd5b610c3382610b96565b9392505050565b801515811461053557600080fd5b60008060408385031215610c5b57600080fd5b823591506020830135610c6d81610c3a565b809150509250929050565b60008060408385031215610c8b57600080fd5b610c9483610b96565b9150610ca260208401610b96565b90509250929050565b600181811c90821680610cbf57607f821691505b60208210811415610ce057634e487b7160e01b600052602260045260246000fd5b50919050565b60008219821115610d0757634e487b7160e01b600052601160045260246000fd5b500190565b600060208284031215610d1e57600080fd5b8151610c3381610c3a56fea26469706673582212206f540642bf41a4200940495fab0db744736c3265ffa38145910e388be776626c64736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063c9d27afe11610066578063c9d27afe14610211578063d96a094a14610226578063dd62ed3e14610239578063e4849b321461024c57600080fd5b806370a08231146101ba57806395d89b41146101e3578063a457c2d7146101eb578063a9059cbb146101fe57600080fd5b806318160ddd116100d357806318160ddd1461017357806323b872dd14610185578063313ce5671461019857806339509351146101a757600080fd5b8063013cf08b146100fa57806306fdde031461013b578063095ea7b314610150575b600080fd5b610121610108366004610b28565b6007602052600090815260409020805460019091015482565b604080519283526020830191909152015b60405180910390f35b61014361025f565b6040516101329190610b41565b61016361015e366004610bb2565b6102f1565b6040519015158152602001610132565b6002545b604051908152602001610132565b610163610193366004610bdc565b610309565b60405160128152602001610132565b6101636101b5366004610bb2565b61032d565b6101776101c8366004610c18565b6001600160a01b031660009081526020819052604090205490565b61014361034f565b6101636101f9366004610bb2565b61035e565b61016361020c366004610bb2565b6103de565b61022461021f366004610c48565b6103ec565b005b610224610234366004610b28565b610499565b610177610247366004610c78565b610538565b61022461025a366004610b28565b610563565b60606003805461026e90610cab565b80601f016020809104026020016040519081016040528092919081815260200182805461029a90610cab565b80156102e75780601f106102bc576101008083540402835291602001916102e7565b820191906000526020600020905b8154815290600101906020018083116102ca57829003601f168201915b5050505050905090565b6000336102ff8185856105fc565b5060019392505050565b600033610317858285610721565b61032285858561079b565b506001949350505050565b6000336102ff8185856103408383610538565b61034a9190610ce6565b6105fc565b60606004805461026e90610cab565b6000338161036c8286610538565b9050838110156103d15760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61032282868684036105fc565b6000336102ff81858561079b565b3360009081526005602052604090205460ff161561040957600080fd5b6000828152600760205260409020811561044b57336000908152602081905260409020548160000160008282546104409190610ce6565b909155506104749050565b3360009081526020819052604090205481600101600082825461046e9190610ce6565b90915550505b33600090815260029190910160205260409020805460ff191691151591909117905550565b6040516323b872dd60e01b815233600482015230602482015260448101829052736b175474e89094c44da98b954eedeac495271d0f906323b872dd90606401602060405180830381600087803b1580156104f257600080fd5b505af1158015610506573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052a9190610d0c565b50610535338261093f565b50565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61056d33826109fe565b60405163a9059cbb60e01b815233600482015260248101829052736b175474e89094c44da98b954eedeac495271d0f9063a9059cbb90604401602060405180830381600087803b1580156105c057600080fd5b505af11580156105d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f89190610d0c565b5050565b6001600160a01b03831661065e5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103c8565b6001600160a01b0382166106bf5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103c8565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b600061072d8484610538565b9050600019811461079557818110156107885760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103c8565b61079584848484036105fc565b50505050565b6001600160a01b0383166107ff5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103c8565b6001600160a01b0382166108615760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103c8565b6001600160a01b038316600090815260208190526040902054818110156108d95760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103c8565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610795565b6001600160a01b0382166109955760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103c8565b80600260008282546109a79190610ce6565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b038216610a5e5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103c8565b6001600160a01b03821660009081526020819052604090205481811015610ad25760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103c8565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101610714565b600060208284031215610b3a57600080fd5b5035919050565b600060208083528351808285015260005b81811015610b6e57858101830151858201604001528201610b52565b81811115610b80576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610bad57600080fd5b919050565b60008060408385031215610bc557600080fd5b610bce83610b96565b946020939093013593505050565b600080600060608486031215610bf157600080fd5b610bfa84610b96565b9250610c0860208501610b96565b9150604084013590509250925092565b600060208284031215610c2a57600080fd5b610c3382610b96565b9392505050565b801515811461053557600080fd5b60008060408385031215610c5b57600080fd5b823591506020830135610c6d81610c3a565b809150509250929050565b60008060408385031215610c8b57600080fd5b610c9483610b96565b9150610ca260208401610b96565b90509250929050565b600181811c90821680610cbf57607f821691505b60208210811415610ce057634e487b7160e01b600052602260045260246000fd5b50919050565b60008219821115610d0757634e487b7160e01b600052601160045260246000fd5b500190565b600060208284031215610d1e57600080fd5b8151610c3381610c3a56fea26469706673582212206f540642bf41a4200940495fab0db744736c3265ffa38145910e388be776626c64736f6c63430008090033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:396:12",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:12",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "69:325:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "79:22:12",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "93:1:12",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "96:4:12"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "89:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "89:12:12"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "79:6:12"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "110:38:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "140:4:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "146:1:12",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "136:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "136:12:12"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "114:18:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "187:31:12",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "189:27:12",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "203:6:12"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "211:4:12",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "199:3:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "199:17:12"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "189:6:12"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "167:18:12"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "160:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "160:26:12"
                  },
                  "nodeType": "YulIf",
                  "src": "157:61:12"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "277:111:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "298:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "305:3:12",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "310:10:12",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "301:3:12"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "301:20:12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "291:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "291:31:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "291:31:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "342:1:12",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "345:4:12",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "335:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "335:15:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "335:15:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "370:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "373:4:12",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "363:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "363:15:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "363:15:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "233:18:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "256:6:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "264:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "253:2:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "253:14:12"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "230:2:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "230:38:12"
                  },
                  "nodeType": "YulIf",
                  "src": "227:161:12"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "49:4:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "58:6:12",
                "type": ""
              }
            ],
            "src": "14:380:12"
          }
        ]
      },
      "contents": "{\n    { }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
      "id": 12,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:8755:12",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:12",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:110:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:16:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "139:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "142:1:12",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:12:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:12:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:12"
                  },
                  "nodeType": "YulIf",
                  "src": "94:52:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "155:33:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "178:9:12"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "165:12:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "165:23:12"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "155:6:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:12",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:12",
                "type": ""
              }
            ],
            "src": "14:180:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "328:119:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "338:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "350:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "361:2:12",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "346:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "346:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "338:4:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "380:9:12"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "391:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "373:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "373:25:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "373:25:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "418:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "429:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "414:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "414:18:12"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "434:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "407:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "407:34:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "407:34:12"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "289:9:12",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "300:6:12",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "308:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "319:4:12",
                "type": ""
              }
            ],
            "src": "199:248:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "573:476:12",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "583:12:12",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "593:2:12",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "587:2:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "611:9:12"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "622:2:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "604:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "604:21:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "604:21:12"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "634:27:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "654:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "648:5:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "648:13:12"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "638:6:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "681:9:12"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "692:2:12"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "677:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "677:18:12"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "697:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "670:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "670:34:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "670:34:12"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "713:10:12",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "722:1:12",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "717:1:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "782:90:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "811:9:12"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "822:1:12"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "807:3:12"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "807:17:12"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "826:2:12",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "803:3:12"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "803:26:12"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "845:6:12"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "853:1:12"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "841:3:12"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "841:14:12"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "857:2:12"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "837:3:12"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "837:23:12"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "831:5:12"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "831:30:12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "796:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "796:66:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "796:66:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "743:1:12"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "746:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "740:2:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "740:13:12"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "754:19:12",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "756:15:12",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "765:1:12"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "768:2:12"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "761:3:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "761:10:12"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "756:1:12"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "736:3:12",
                    "statements": []
                  },
                  "src": "732:140:12"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "906:66:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "935:9:12"
                                    },
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "946:6:12"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "931:3:12"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "931:22:12"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "955:2:12",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "927:3:12"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "927:31:12"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "960:1:12",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "920:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "920:42:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "920:42:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "887:1:12"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "890:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "884:2:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "884:13:12"
                  },
                  "nodeType": "YulIf",
                  "src": "881:91:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "981:62:12",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "997:9:12"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1016:6:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1024:2:12",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1012:3:12"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1012:15:12"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1033:2:12",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "1029:3:12"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1029:7:12"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1008:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1008:29:12"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "993:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "993:45:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1040:2:12",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "989:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "989:54:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "981:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "542:9:12",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "553:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "564:4:12",
                "type": ""
              }
            ],
            "src": "452:597:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1103:124:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1113:29:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1135:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1122:12:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1122:20:12"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1113:5:12"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1205:16:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1214:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1217:1:12",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1207:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1207:12:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1207:12:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1164:5:12"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1175:5:12"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1190:3:12",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1195:1:12",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "1186:3:12"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1186:11:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1199:1:12",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "1182:3:12"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1182:19:12"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1171:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1171:31:12"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1161:2:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1161:42:12"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1154:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1154:50:12"
                  },
                  "nodeType": "YulIf",
                  "src": "1151:70:12"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1082:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1093:5:12",
                "type": ""
              }
            ],
            "src": "1054:173:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1319:167:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1365:16:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1374:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1377:1:12",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1367:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1367:12:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1367:12:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1340:7:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1349:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1336:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1336:23:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1361:2:12",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1332:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1332:32:12"
                  },
                  "nodeType": "YulIf",
                  "src": "1329:52:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1390:39:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1419:9:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1400:18:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1400:29:12"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1390:6:12"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1438:42:12",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1465:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1476:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1461:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1461:18:12"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1448:12:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1448:32:12"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1438:6:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1277:9:12",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1288:7:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1300:6:12",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1308:6:12",
                "type": ""
              }
            ],
            "src": "1232:254:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1586:92:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1596:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1608:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1619:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1604:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1604:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1596:4:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1638:9:12"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1663:6:12"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1656:6:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1656:14:12"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1649:6:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1649:22:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1631:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1631:41:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1631:41:12"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1555:9:12",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1566:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1577:4:12",
                "type": ""
              }
            ],
            "src": "1491:187:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1784:76:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1794:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1806:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1817:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1802:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1802:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1794:4:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1836:9:12"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1847:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1829:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1829:25:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1829:25:12"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1753:9:12",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1764:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1775:4:12",
                "type": ""
              }
            ],
            "src": "1683:177:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1969:224:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2015:16:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2024:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2027:1:12",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2017:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2017:12:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2017:12:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1990:7:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1999:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1986:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1986:23:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2011:2:12",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1982:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1982:32:12"
                  },
                  "nodeType": "YulIf",
                  "src": "1979:52:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2040:39:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2069:9:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2050:18:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2050:29:12"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2040:6:12"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2088:48:12",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2121:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2132:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2117:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2117:18:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2098:18:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2098:38:12"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2088:6:12"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2145:42:12",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2172:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2183:2:12",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2168:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2168:18:12"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2155:12:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2155:32:12"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2145:6:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1919:9:12",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1930:7:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1942:6:12",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1950:6:12",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1958:6:12",
                "type": ""
              }
            ],
            "src": "1865:328:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2295:87:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2305:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2317:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2328:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2313:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2313:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2305:4:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2347:9:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2362:6:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2370:4:12",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2358:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2358:17:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2340:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2340:36:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2340:36:12"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2264:9:12",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2275:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2286:4:12",
                "type": ""
              }
            ],
            "src": "2198:184:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2457:116:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2503:16:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2512:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2515:1:12",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2505:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2505:12:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2505:12:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2478:7:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2487:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2474:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2474:23:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2499:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2470:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2470:32:12"
                  },
                  "nodeType": "YulIf",
                  "src": "2467:52:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2528:39:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2557:9:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2538:18:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2538:29:12"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2528:6:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2423:9:12",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2434:7:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2446:6:12",
                "type": ""
              }
            ],
            "src": "2387:186:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2620:76:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2674:16:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2683:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2686:1:12",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2676:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2676:12:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2676:12:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2643:5:12"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2664:5:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "2657:6:12"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2657:13:12"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2650:6:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2650:21:12"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2640:2:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2640:32:12"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2633:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2633:40:12"
                  },
                  "nodeType": "YulIf",
                  "src": "2630:60:12"
                }
              ]
            },
            "name": "validator_revert_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2609:5:12",
                "type": ""
              }
            ],
            "src": "2578:118:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2785:225:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2831:16:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2840:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2843:1:12",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2833:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2833:12:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2833:12:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2806:7:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2815:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2802:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2802:23:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2827:2:12",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2798:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2798:32:12"
                  },
                  "nodeType": "YulIf",
                  "src": "2795:52:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2856:33:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2879:9:12"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2866:12:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2866:23:12"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2856:6:12"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2898:45:12",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2928:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2939:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2924:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2924:18:12"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2911:12:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2911:32:12"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2902:5:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2974:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "2952:21:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2952:28:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2952:28:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2989:15:12",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2999:5:12"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2989:6:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2743:9:12",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2754:7:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2766:6:12",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2774:6:12",
                "type": ""
              }
            ],
            "src": "2701:309:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3102:173:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3148:16:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3157:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3160:1:12",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3150:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3150:12:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3150:12:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3123:7:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3132:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3119:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3119:23:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3144:2:12",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3115:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3115:32:12"
                  },
                  "nodeType": "YulIf",
                  "src": "3112:52:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3173:39:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3202:9:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "3183:18:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3183:29:12"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3173:6:12"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3221:48:12",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3254:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3265:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3250:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3250:18:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "3231:18:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3231:38:12"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3221:6:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3060:9:12",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3071:7:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3083:6:12",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3091:6:12",
                "type": ""
              }
            ],
            "src": "3015:260:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3335:325:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3345:22:12",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3359:1:12",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "3362:4:12"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "3355:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3355:12:12"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "3345:6:12"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3376:38:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "3406:4:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3412:1:12",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "3402:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3402:12:12"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "3380:18:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3453:31:12",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3455:27:12",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "3469:6:12"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3477:4:12",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "3465:3:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3465:17:12"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3455:6:12"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "3433:18:12"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3426:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3426:26:12"
                  },
                  "nodeType": "YulIf",
                  "src": "3423:61:12"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3543:111:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3564:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3571:3:12",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3576:10:12",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "3567:3:12"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3567:20:12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3557:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3557:31:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3557:31:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3608:1:12",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3611:4:12",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3601:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3601:15:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3601:15:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3636:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3639:4:12",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3629:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3629:15:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3629:15:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "3499:18:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3522:6:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3530:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "3519:2:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3519:14:12"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "3496:2:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3496:38:12"
                  },
                  "nodeType": "YulIf",
                  "src": "3493:161:12"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "3315:4:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "3324:6:12",
                "type": ""
              }
            ],
            "src": "3280:380:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3713:177:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3748:111:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3769:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3776:3:12",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3781:10:12",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "3772:3:12"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3772:20:12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3762:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3762:31:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3762:31:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3813:1:12",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3816:4:12",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3806:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3806:15:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3806:15:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3841:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3844:4:12",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3834:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3834:15:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3834:15:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3729:1:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "3736:1:12"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "3732:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3732:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3726:2:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3726:13:12"
                  },
                  "nodeType": "YulIf",
                  "src": "3723:136:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3868:16:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3879:1:12"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3882:1:12"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3875:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3875:9:12"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "3868:3:12"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "3696:1:12",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "3699:1:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "3705:3:12",
                "type": ""
              }
            ],
            "src": "3665:225:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4069:227:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4086:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4097:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4079:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4079:21:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4079:21:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4120:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4131:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4116:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4116:18:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4136:2:12",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4109:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4109:30:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4109:30:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4159:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4170:2:12",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4155:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4155:18:12"
                      },
                      {
                        "hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4175:34:12",
                        "type": "",
                        "value": "ERC20: decreased allowance below"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4148:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4148:62:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4148:62:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4230:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4241:2:12",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4226:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4226:18:12"
                      },
                      {
                        "hexValue": "207a65726f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4246:7:12",
                        "type": "",
                        "value": " zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4219:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4219:35:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4219:35:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4263:27:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4275:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4286:3:12",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4271:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4271:19:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4263:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4046:9:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4060:4:12",
                "type": ""
              }
            ],
            "src": "3895:401:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4458:218:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4468:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4480:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4491:2:12",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4476:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4476:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4468:4:12"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4503:29:12",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4521:3:12",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4526:1:12",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "4517:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4517:11:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4530:1:12",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "4513:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4513:19:12"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "4507:2:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4548:9:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4563:6:12"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4571:2:12"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4559:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4559:15:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4541:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4541:34:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4541:34:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4595:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4606:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4591:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4591:18:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "4615:6:12"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4623:2:12"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4611:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4611:15:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4584:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4584:43:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4584:43:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4647:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4658:2:12",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4643:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4643:18:12"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "4663:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4636:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4636:34:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4636:34:12"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4411:9:12",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4422:6:12",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4430:6:12",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4438:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4449:4:12",
                "type": ""
              }
            ],
            "src": "4301:375:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4759:167:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4805:16:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4814:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4817:1:12",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4807:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4807:12:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4807:12:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4780:7:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4789:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4776:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4776:23:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4801:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4772:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4772:32:12"
                  },
                  "nodeType": "YulIf",
                  "src": "4769:52:12"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4830:29:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4849:9:12"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4843:5:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4843:16:12"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4834:5:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4890:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "4868:21:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4868:28:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4868:28:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4905:15:12",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4915:5:12"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4905:6:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4725:9:12",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4736:7:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4748:6:12",
                "type": ""
              }
            ],
            "src": "4681:245:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5060:145:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5070:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5082:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5093:2:12",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5078:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5078:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5070:4:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5112:9:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5127:6:12"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5143:3:12",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5148:1:12",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "5139:3:12"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5139:11:12"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5152:1:12",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "5135:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5135:19:12"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5123:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5123:32:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5105:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5105:51:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5105:51:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5176:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5187:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5172:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5172:18:12"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5192:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5165:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5165:34:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5165:34:12"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5021:9:12",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5032:6:12",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5040:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5051:4:12",
                "type": ""
              }
            ],
            "src": "4931:274:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5384:226:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5401:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5412:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5394:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5394:21:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5394:21:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5435:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5446:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5431:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5431:18:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5451:2:12",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5424:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5424:30:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5424:30:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5474:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5485:2:12",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5470:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5470:18:12"
                      },
                      {
                        "hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5490:34:12",
                        "type": "",
                        "value": "ERC20: approve from the zero add"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5463:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5463:62:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5463:62:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5545:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5556:2:12",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5541:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5541:18:12"
                      },
                      {
                        "hexValue": "72657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5561:6:12",
                        "type": "",
                        "value": "ress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5534:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5534:34:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5534:34:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5577:27:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5589:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5600:3:12",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5585:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5585:19:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5577:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5361:9:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5375:4:12",
                "type": ""
              }
            ],
            "src": "5210:400:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5789:224:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5806:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5817:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5799:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5799:21:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5799:21:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5840:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5851:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5836:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5836:18:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5856:2:12",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5829:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5829:30:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5829:30:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5879:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5890:2:12",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5875:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5875:18:12"
                      },
                      {
                        "hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5895:34:12",
                        "type": "",
                        "value": "ERC20: approve to the zero addre"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5868:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5868:62:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5868:62:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5950:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5961:2:12",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5946:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5946:18:12"
                      },
                      {
                        "hexValue": "7373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5966:4:12",
                        "type": "",
                        "value": "ss"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5939:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5939:32:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5939:32:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5980:27:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5992:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6003:3:12",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5988:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5988:19:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5980:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5766:9:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5780:4:12",
                "type": ""
              }
            ],
            "src": "5615:398:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6192:179:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6209:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6220:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6202:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6202:21:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6202:21:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6243:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6254:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6239:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6239:18:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6259:2:12",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6232:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6232:30:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6232:30:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6282:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6293:2:12",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6278:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6278:18:12"
                      },
                      {
                        "hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6298:31:12",
                        "type": "",
                        "value": "ERC20: insufficient allowance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6271:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6271:59:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6271:59:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6339:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6351:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6362:2:12",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6347:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6347:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6339:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6169:9:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6183:4:12",
                "type": ""
              }
            ],
            "src": "6018:353:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6550:227:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6567:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6578:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6560:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6560:21:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6560:21:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6601:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6612:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6597:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6597:18:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6617:2:12",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6590:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6590:30:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6590:30:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6640:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6651:2:12",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6636:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6636:18:12"
                      },
                      {
                        "hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6656:34:12",
                        "type": "",
                        "value": "ERC20: transfer from the zero ad"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6629:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6629:62:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6629:62:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6711:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6722:2:12",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6707:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6707:18:12"
                      },
                      {
                        "hexValue": "6472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6727:7:12",
                        "type": "",
                        "value": "dress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6700:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6700:35:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6700:35:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6744:27:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6756:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6767:3:12",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6752:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6752:19:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6744:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6527:9:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6541:4:12",
                "type": ""
              }
            ],
            "src": "6376:401:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6956:225:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6973:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6984:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6966:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6966:21:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6966:21:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7007:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7018:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7003:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7003:18:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7023:2:12",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6996:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6996:30:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6996:30:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7046:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7057:2:12",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7042:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7042:18:12"
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7062:34:12",
                        "type": "",
                        "value": "ERC20: transfer to the zero addr"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7035:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7035:62:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7035:62:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7117:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7128:2:12",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7113:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7113:18:12"
                      },
                      {
                        "hexValue": "657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7133:5:12",
                        "type": "",
                        "value": "ess"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7106:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7106:33:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7106:33:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7148:27:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7160:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7171:3:12",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7156:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7156:19:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7148:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6933:9:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6947:4:12",
                "type": ""
              }
            ],
            "src": "6782:399:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7360:228:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7377:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7388:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7370:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7370:21:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7370:21:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7411:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7422:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7407:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7407:18:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7427:2:12",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7400:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7400:30:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7400:30:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7450:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7461:2:12",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7446:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7446:18:12"
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7466:34:12",
                        "type": "",
                        "value": "ERC20: transfer amount exceeds b"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7439:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7439:62:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7439:62:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7521:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7532:2:12",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7517:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7517:18:12"
                      },
                      {
                        "hexValue": "616c616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7537:8:12",
                        "type": "",
                        "value": "alance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7510:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7510:36:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7510:36:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7555:27:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7567:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7578:3:12",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7563:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7563:19:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7555:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7337:9:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7351:4:12",
                "type": ""
              }
            ],
            "src": "7186:402:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7767:181:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7784:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7795:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7777:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7777:21:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7777:21:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7818:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7829:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7814:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7814:18:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7834:2:12",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7807:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7807:30:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7807:30:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7857:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7868:2:12",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7853:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7853:18:12"
                      },
                      {
                        "hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7873:33:12",
                        "type": "",
                        "value": "ERC20: mint to the zero address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7846:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7846:61:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7846:61:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7916:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7928:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7939:2:12",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7924:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7924:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7916:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7744:9:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7758:4:12",
                "type": ""
              }
            ],
            "src": "7593:355:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8127:223:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8144:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8155:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8137:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8137:21:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8137:21:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8178:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8189:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8174:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8174:18:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8194:2:12",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8167:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8167:30:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8167:30:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8217:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8228:2:12",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8213:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8213:18:12"
                      },
                      {
                        "hexValue": "45524332303a206275726e2066726f6d20746865207a65726f20616464726573",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8233:34:12",
                        "type": "",
                        "value": "ERC20: burn from the zero addres"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8206:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8206:62:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8206:62:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8288:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8299:2:12",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8284:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8284:18:12"
                      },
                      {
                        "hexValue": "73",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8304:3:12",
                        "type": "",
                        "value": "s"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8277:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8277:31:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8277:31:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8317:27:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8329:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8340:3:12",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8325:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8325:19:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8317:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8104:9:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8118:4:12",
                "type": ""
              }
            ],
            "src": "7953:397:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8529:224:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8546:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8557:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8539:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8539:21:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8539:21:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8580:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8591:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8576:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8576:18:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8596:2:12",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8569:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8569:30:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8569:30:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8619:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8630:2:12",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8615:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8615:18:12"
                      },
                      {
                        "hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8635:34:12",
                        "type": "",
                        "value": "ERC20: burn amount exceeds balan"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8608:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8608:62:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8608:62:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8690:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8701:2:12",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8686:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8686:18:12"
                      },
                      {
                        "hexValue": "6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8706:4:12",
                        "type": "",
                        "value": "ce"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8679:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8679:32:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8679:32:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8720:27:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8732:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8743:3:12",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8728:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8728:19:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8720:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8506:9:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8520:4:12",
                "type": ""
              }
            ],
            "src": "8355:398:12"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint256t_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_bool(value)\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds balan\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n}",
      "id": 12,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "81:1048:6:-:0;;;423:39;;;;;;;;;;1887:113:5;;;;;;;;;;;;;-1:-1:-1;;;1887:113:5;;;;;;;;;;;;;;;;-1:-1:-1;;;1887:113:5;;;1961:5;1953;:13;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1976:17:5;;;;:7;;:17;;;;;:::i;:::-;;1887:113;;81:1048:6;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;81:1048:6;;;-1:-1:-1;81:1048:6;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:380:12;93:1;89:12;;;;136;;;157:61;;211:4;203:6;199:17;189:27;;157:61;264:2;256:6;253:14;233:18;230:38;227:161;;;310:10;305:3;301:20;298:1;291:31;345:4;342:1;335:15;373:4;370:1;363:15;227:161;;14:380;;;:::o;:::-;81:1048:6;;;;;;",
  "deployedSourceMap": "81:1048:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;374:42;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;373:25:12;;;429:2;414:18;;407:34;;;;346:18;374:42:6;;;;;;;;2065:89:5;;;:::i;:::-;;;;;;;:::i;4313:195::-;;;;;;:::i;:::-;;:::i;:::-;;;1656:14:12;;1649:22;1631:41;;1619:2;1604:18;4313:195:5;1491:187:12;3126:106:5;3213:12;;3126:106;;;1829:25:12;;;1817:2;1802:18;3126:106:5;1683:177:12;5070:284:5;;;;;;:::i;:::-;;:::i;2984:82::-;;;3057:2;2340:36:12;;2328:2;2313:18;2984:82:5;2198:184:12;5749:232:5;;;;;;:::i;:::-;;:::i;3290:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3390:18:5;3364:7;3390:18;;;;;;;;;;;;3290:125;2267:93;;;:::i;6468:425::-;;;;;;:::i;:::-;;:::i;3611:187::-;;;;;;:::i;:::-;;:::i;748:379:6:-;;;;;;:::i;:::-;;:::i;:::-;;472:141;;;;;;:::i;:::-;;:::i;3856:149:5:-;;;;;;:::i;:::-;;:::i;619:123:6:-;;;;;;:::i;:::-;;:::i;2065:89:5:-;2110:13;2142:5;2135:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2065:89;:::o;4313:195::-;4396:4;4428:10;4448:32;4428:10;4464:7;4473:6;4448:8;:32::i;:::-;-1:-1:-1;4497:4:5;;4313:195;-1:-1:-1;;;4313:195:5:o;5070:284::-;5197:4;5231:10;5251:38;5267:4;5231:10;5282:6;5251:15;:38::i;:::-;5299:27;5309:4;5315:2;5319:6;5299:9;:27::i;:::-;-1:-1:-1;5343:4:5;;5070:284;-1:-1:-1;;;;5070:284:5:o;5749:232::-;5837:4;5869:10;5889:64;5869:10;5905:7;5942:10;5914:25;5869:10;5905:7;5914:9;:25::i;:::-;:38;;;;:::i;:::-;5889:8;:64::i;2267:93::-;2314:13;2346:7;2339:14;;;;;:::i;6468:425::-;6561:4;6593:10;6561:4;6640:25;6593:10;6657:7;6640:9;:25::i;:::-;6613:52;;6703:15;6683:16;:35;;6675:85;;;;-1:-1:-1;;;6675:85:5;;4097:2:12;6675:85:5;;;4079:21:12;4136:2;4116:18;;;4109:30;4175:34;4155:18;;;4148:62;-1:-1:-1;;;4226:18:12;;;4219:35;4271:19;;6675:85:5;;;;;;;;;6794:60;6803:5;6810:7;6838:15;6819:16;:34;6794:8;:60::i;3611:187::-;3690:4;3722:10;3742:28;3722:10;3759:2;3763:6;3742:9;:28::i;748:379:6:-;833:10;824:20;;;;:8;:20;;;;;;;;823:21;815:30;;;;;;855:25;883:22;;;:9;:22;;;;;916:153;;;;975:10;3364:7:5;3390:18;;;;;;;;;;;944:8:6;:17;;;:42;;;;;;;:::i;:::-;;;;-1:-1:-1;916:153:6;;-1:-1:-1;916:153:6;;1047:10;3364:7:5;3390:18;;;;;;;;;;;1017:8:6;:16;;;:41;;;;;;;:::i;:::-;;;;-1:-1:-1;;916:153:6;1097:10;1079:29;;;;:17;;;;;:29;;;;;:41;;-1:-1:-1;;1079:41:6;;;;;;;;;;-1:-1:-1;748:379:6:o;472:141::-;518:52;;-1:-1:-1;;;518:52:6;;535:10;518:52;;;4541:34:12;555:4:6;4591:18:12;;;4584:43;4643:18;;;4636:34;;;141:42:6;;518:16;;4476:18:12;;518:52:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;580:26;586:10;598:7;580:5;:26::i;:::-;472:141;:::o;3856:149:5:-;-1:-1:-1;;;;;3971:18:5;;;3945:7;3971:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3856:149::o;619:123:6:-;666:26;672:10;684:7;666:5;:26::i;:::-;702:33;;-1:-1:-1;;;702:33:6;;715:10;702:33;;;5105:51:12;5172:18;;;5165:34;;;141:42:6;;702:12;;5078:18:12;;702:33:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;619:123;:::o;10378:370:5:-;-1:-1:-1;;;;;10509:19:5;;10501:68;;;;-1:-1:-1;;;10501:68:5;;5412:2:12;10501:68:5;;;5394:21:12;5451:2;5431:18;;;5424:30;5490:34;5470:18;;;5463:62;-1:-1:-1;;;5541:18:12;;;5534:34;5585:19;;10501:68:5;5210:400:12;10501:68:5;-1:-1:-1;;;;;10587:21:5;;10579:68;;;;-1:-1:-1;;;10579:68:5;;5817:2:12;10579:68:5;;;5799:21:12;5856:2;5836:18;;;5829:30;5895:34;5875:18;;;5868:62;-1:-1:-1;;;5946:18:12;;;5939:32;5988:19;;10579:68:5;5615:398:12;10579:68:5;-1:-1:-1;;;;;10658:18:5;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10709:32;;1829:25:12;;;10709:32:5;;1802:18:12;10709:32:5;;;;;;;;10378:370;;;:::o;11029:441::-;11159:24;11186:25;11196:5;11203:7;11186:9;:25::i;:::-;11159:52;;-1:-1:-1;;11225:16:5;:37;11221:243;;11306:6;11286:16;:26;;11278:68;;;;-1:-1:-1;;;11278:68:5;;6220:2:12;11278:68:5;;;6202:21:12;6259:2;6239:18;;;6232:30;6298:31;6278:18;;;6271:59;6347:18;;11278:68:5;6018:353:12;11278:68:5;11388:51;11397:5;11404:7;11432:6;11413:16;:25;11388:8;:51::i;:::-;11149:321;11029:441;;;:::o;7347:818::-;-1:-1:-1;;;;;7473:18:5;;7465:68;;;;-1:-1:-1;;;7465:68:5;;6578:2:12;7465:68:5;;;6560:21:12;6617:2;6597:18;;;6590:30;6656:34;6636:18;;;6629:62;-1:-1:-1;;;6707:18:12;;;6700:35;6752:19;;7465:68:5;6376:401:12;7465:68:5;-1:-1:-1;;;;;7551:16:5;;7543:64;;;;-1:-1:-1;;;7543:64:5;;6984:2:12;7543:64:5;;;6966:21:12;7023:2;7003:18;;;6996:30;7062:34;7042:18;;;7035:62;-1:-1:-1;;;7113:18:12;;;7106:33;7156:19;;7543:64:5;6782:399:12;7543:64:5;-1:-1:-1;;;;;7689:15:5;;7667:19;7689:15;;;;;;;;;;;7722:21;;;;7714:72;;;;-1:-1:-1;;;7714:72:5;;7388:2:12;7714:72:5;;;7370:21:12;7427:2;7407:18;;;7400:30;7466:34;7446:18;;;7439:62;-1:-1:-1;;;7517:18:12;;;7510:36;7563:19;;7714:72:5;7186:402:12;7714:72:5;-1:-1:-1;;;;;7820:15:5;;;:9;:15;;;;;;;;;;;7838:20;;;7820:38;;8035:13;;;;;;;;;;:23;;;;;;8084:26;;1829:25:12;;;8035:13:5;;8084:26;;1802:18:12;8084:26:5;;;;;;;8121:37;9296:659;8441:535;-1:-1:-1;;;;;8524:21:5;;8516:65;;;;-1:-1:-1;;;8516:65:5;;7795:2:12;8516:65:5;;;7777:21:12;7834:2;7814:18;;;7807:30;7873:33;7853:18;;;7846:61;7924:18;;8516:65:5;7593:355:12;8516:65:5;8668:6;8652:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8820:18:5;;:9;:18;;;;;;;;;;;:28;;;;;;8873:37;1829:25:12;;;8873:37:5;;1802:18:12;8873:37:5;;;;;;;702:33:6;619:123;:::o;9296:659:5:-;-1:-1:-1;;;;;9379:21:5;;9371:67;;;;-1:-1:-1;;;9371:67:5;;8155:2:12;9371:67:5;;;8137:21:12;8194:2;8174:18;;;8167:30;8233:34;8213:18;;;8206:62;-1:-1:-1;;;8284:18:12;;;8277:31;8325:19;;9371:67:5;7953:397:12;9371:67:5;-1:-1:-1;;;;;9534:18:5;;9509:22;9534:18;;;;;;;;;;;9570:24;;;;9562:71;;;;-1:-1:-1;;;9562:71:5;;8557:2:12;9562:71:5;;;8539:21:12;8596:2;8576:18;;;8569:30;8635:34;8615:18;;;8608:62;-1:-1:-1;;;8686:18:12;;;8679:32;8728:19;;9562:71:5;8355:398:12;9562:71:5;-1:-1:-1;;;;;9667:18:5;;:9;:18;;;;;;;;;;;9688:23;;;9667:44;;9804:12;:22;;;;;;;9852:37;1829:25:12;;;9667:9:5;;:18;9852:37;;1802:18:12;9852:37:5;1683:177:12;14:180;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:12;;14:180;-1:-1:-1;14:180:12:o;452:597::-;564:4;593:2;622;611:9;604:21;654:6;648:13;697:6;692:2;681:9;677:18;670:34;722:1;732:140;746:6;743:1;740:13;732:140;;;841:14;;;837:23;;831:30;807:17;;;826:2;803:26;796:66;761:10;;732:140;;;890:6;887:1;884:13;881:91;;;960:1;955:2;946:6;935:9;931:22;927:31;920:42;881:91;-1:-1:-1;1033:2:12;1012:15;-1:-1:-1;;1008:29:12;993:45;;;;1040:2;989:54;;452:597;-1:-1:-1;;;452:597:12:o;1054:173::-;1122:20;;-1:-1:-1;;;;;1171:31:12;;1161:42;;1151:70;;1217:1;1214;1207:12;1151:70;1054:173;;;:::o;1232:254::-;1300:6;1308;1361:2;1349:9;1340:7;1336:23;1332:32;1329:52;;;1377:1;1374;1367:12;1329:52;1400:29;1419:9;1400:29;:::i;:::-;1390:39;1476:2;1461:18;;;;1448:32;;-1:-1:-1;;;1232:254:12:o;1865:328::-;1942:6;1950;1958;2011:2;1999:9;1990:7;1986:23;1982:32;1979:52;;;2027:1;2024;2017:12;1979:52;2050:29;2069:9;2050:29;:::i;:::-;2040:39;;2098:38;2132:2;2121:9;2117:18;2098:38;:::i;:::-;2088:48;;2183:2;2172:9;2168:18;2155:32;2145:42;;1865:328;;;;;:::o;2387:186::-;2446:6;2499:2;2487:9;2478:7;2474:23;2470:32;2467:52;;;2515:1;2512;2505:12;2467:52;2538:29;2557:9;2538:29;:::i;:::-;2528:39;2387:186;-1:-1:-1;;;2387:186:12:o;2578:118::-;2664:5;2657:13;2650:21;2643:5;2640:32;2630:60;;2686:1;2683;2676:12;2701:309;2766:6;2774;2827:2;2815:9;2806:7;2802:23;2798:32;2795:52;;;2843:1;2840;2833:12;2795:52;2879:9;2866:23;2856:33;;2939:2;2928:9;2924:18;2911:32;2952:28;2974:5;2952:28;:::i;:::-;2999:5;2989:15;;;2701:309;;;;;:::o;3015:260::-;3083:6;3091;3144:2;3132:9;3123:7;3119:23;3115:32;3112:52;;;3160:1;3157;3150:12;3112:52;3183:29;3202:9;3183:29;:::i;:::-;3173:39;;3231:38;3265:2;3254:9;3250:18;3231:38;:::i;:::-;3221:48;;3015:260;;;;;:::o;3280:380::-;3359:1;3355:12;;;;3402;;;3423:61;;3477:4;3469:6;3465:17;3455:27;;3423:61;3530:2;3522:6;3519:14;3499:18;3496:38;3493:161;;;3576:10;3571:3;3567:20;3564:1;3557:31;3611:4;3608:1;3601:15;3639:4;3636:1;3629:15;3493:161;;3280:380;;;:::o;3665:225::-;3705:3;3736:1;3732:6;3729:1;3726:13;3723:136;;;3781:10;3776:3;3772:20;3769:1;3762:31;3816:4;3813:1;3806:15;3844:4;3841:1;3834:15;3723:136;-1:-1:-1;3875:9:12;;3665:225::o;4681:245::-;4748:6;4801:2;4789:9;4780:7;4776:23;4772:32;4769:52;;;4817:1;4814;4807:12;4769:52;4849:9;4843:16;4868:28;4890:5;4868:28;:::i",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"../ERC20.sol\";\n\ncontract Govern is ERC20 {\n    IERC20 constant DAI = IERC20(0x6B175474E89094C44Da98b954EedeAC495271d0F);\n    mapping(address => bool) hasVoted;\n\n    struct Proposal {\n        uint yesCount;\n        uint noCount;\n        mapping(address => bool) hasVoted;\n    }\n    \n    uint numProposals;\n    mapping(uint => Proposal) public proposals;\n\n    constructor() ERC20(\"Govern\", \"GOV\") {}\n    \n    function buy(uint _amount) external {\n        DAI.transferFrom(msg.sender, address(this), _amount);\n        _mint(msg.sender, _amount);\n    }\n\n    function sell(uint _amount) external {\n        _burn(msg.sender, _amount);\n        DAI.transfer(msg.sender, _amount);\n    }\n\n    function vote(uint _proposalId, bool _supports) external {\n        require(!hasVoted[msg.sender]);\n        Proposal storage proposal = proposals[_proposalId];\n\n        if(_supports) {\n            proposal.yesCount += balanceOf(msg.sender);\n        } else {\n            proposal.noCount += balanceOf(msg.sender);\n        }\n\n        proposal.hasVoted[msg.sender] = _supports;\n    }\n}",
  "sourcePath": "/Users/josephdeangeloi/Documents/Github/BuildingOnAave/contracts/Interfaces/Govern.sol",
  "ast": {
    "absolutePath": "project:/contracts/Interfaces/Govern.sol",
    "exportedSymbols": {
      "ERC20": [
        1474
      ],
      "Govern": [
        1612
      ],
      "IERC20": [
        1690
      ]
    },
    "id": 1613,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1476,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:6"
      },
      {
        "absolutePath": "project:/contracts/ERC20.sol",
        "file": "../ERC20.sol",
        "id": 1477,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1613,
        "sourceUnit": 1475,
        "src": "57:22:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1478,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1474,
              "src": "100:5:6"
            },
            "id": 1479,
            "nodeType": "InheritanceSpecifier",
            "src": "100:5:6"
          }
        ],
        "canonicalName": "Govern",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1612,
        "linearizedBaseContracts": [
          1612,
          1474,
          1690
        ],
        "name": "Govern",
        "nameLocation": "90:6:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 1485,
            "mutability": "constant",
            "name": "DAI",
            "nameLocation": "128:3:6",
            "nodeType": "VariableDeclaration",
            "scope": 1612,
            "src": "112:72:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$1690",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 1481,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1480,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1690,
                "src": "112:6:6"
              },
              "referencedDeclaration": 1690,
              "src": "112:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1690",
                "typeString": "contract IERC20"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307836423137353437344538393039344334344461393862393534456564654143343935323731643046",
                  "id": 1483,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "141:42:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x6B175474E89094C44Da98b954EedeAC495271d0F"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 1482,
                "name": "IERC20",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 1690,
                "src": "134:6:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IERC20_$1690_$",
                  "typeString": "type(contract IERC20)"
                }
              },
              "id": 1484,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "134:50:6",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1690",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1489,
            "mutability": "mutable",
            "name": "hasVoted",
            "nameLocation": "215:8:6",
            "nodeType": "VariableDeclaration",
            "scope": 1612,
            "src": "190:33:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 1488,
              "keyType": {
                "id": 1486,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "198:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "190:24:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 1487,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "209:4:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "Govern.Proposal",
            "id": 1498,
            "members": [
              {
                "constant": false,
                "id": 1491,
                "mutability": "mutable",
                "name": "yesCount",
                "nameLocation": "261:8:6",
                "nodeType": "VariableDeclaration",
                "scope": 1498,
                "src": "256:13:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1490,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "256:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1493,
                "mutability": "mutable",
                "name": "noCount",
                "nameLocation": "284:7:6",
                "nodeType": "VariableDeclaration",
                "scope": 1498,
                "src": "279:12:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1492,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "279:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1497,
                "mutability": "mutable",
                "name": "hasVoted",
                "nameLocation": "326:8:6",
                "nodeType": "VariableDeclaration",
                "scope": 1498,
                "src": "301:33:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "typeName": {
                  "id": 1496,
                  "keyType": {
                    "id": 1494,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "309:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "301:24:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "valueType": {
                    "id": 1495,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "320:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Proposal",
            "nameLocation": "237:8:6",
            "nodeType": "StructDefinition",
            "scope": 1612,
            "src": "230:111:6",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1500,
            "mutability": "mutable",
            "name": "numProposals",
            "nameLocation": "356:12:6",
            "nodeType": "VariableDeclaration",
            "scope": 1612,
            "src": "351:17:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1499,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "351:4:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "013cf08b",
            "id": 1505,
            "mutability": "mutable",
            "name": "proposals",
            "nameLocation": "407:9:6",
            "nodeType": "VariableDeclaration",
            "scope": 1612,
            "src": "374:42:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$1498_storage_$",
              "typeString": "mapping(uint256 => struct Govern.Proposal)"
            },
            "typeName": {
              "id": 1504,
              "keyType": {
                "id": 1501,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "382:4:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "374:25:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$1498_storage_$",
                "typeString": "mapping(uint256 => struct Govern.Proposal)"
              },
              "valueType": {
                "id": 1503,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1502,
                  "name": "Proposal",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1498,
                  "src": "390:8:6"
                },
                "referencedDeclaration": 1498,
                "src": "390:8:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Proposal_$1498_storage_ptr",
                  "typeString": "struct Govern.Proposal"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1512,
              "nodeType": "Block",
              "src": "460:2:6",
              "statements": []
            },
            "id": 1513,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "476f7665726e",
                    "id": 1508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "443:8:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_92d79a14d87ccd1d066dacff4fb5faa51d623b0624d81a6339e593bef614e253",
                      "typeString": "literal_string \"Govern\""
                    },
                    "value": "Govern"
                  },
                  {
                    "hexValue": "474f56",
                    "id": 1509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "453:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_8eeeb5290718f324aa0965d35cf24b6163c00698ab277824ce00bdf229264ecf",
                      "typeString": "literal_string \"GOV\""
                    },
                    "value": "GOV"
                  }
                ],
                "id": 1510,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 1507,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1474,
                  "src": "437:5:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "437:22:6"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1506,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "434:2:6"
            },
            "returnParameters": {
              "id": 1511,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "460:0:6"
            },
            "scope": 1612,
            "src": "423:39:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1536,
              "nodeType": "Block",
              "src": "508:105:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1521,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "535:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "535:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1525,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "555:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Govern_$1612",
                              "typeString": "contract Govern"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Govern_$1612",
                              "typeString": "contract Govern"
                            }
                          ],
                          "id": 1524,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "547:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1523,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "547:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1526,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "547:13:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1527,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1515,
                        "src": "562:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1518,
                        "name": "DAI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1485,
                        "src": "518:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1690",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1520,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1671,
                      "src": "518:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "518:52:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1529,
                  "nodeType": "ExpressionStatement",
                  "src": "518:52:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1531,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "586:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "586:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1533,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1515,
                        "src": "598:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1530,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1291,
                      "src": "580:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "580:26:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1535,
                  "nodeType": "ExpressionStatement",
                  "src": "580:26:6"
                }
              ]
            },
            "functionSelector": "d96a094a",
            "id": 1537,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buy",
            "nameLocation": "481:3:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1516,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1515,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "490:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1537,
                  "src": "485:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1514,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "485:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "484:14:6"
            },
            "returnParameters": {
              "id": 1517,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "508:0:6"
            },
            "scope": 1612,
            "src": "472:141:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1556,
              "nodeType": "Block",
              "src": "656:86:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1543,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "672:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "672:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1545,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1539,
                        "src": "684:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1542,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1363,
                      "src": "666:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "666:26:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1547,
                  "nodeType": "ExpressionStatement",
                  "src": "666:26:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1551,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "715:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1552,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "715:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1553,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1539,
                        "src": "727:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1548,
                        "name": "DAI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1485,
                        "src": "702:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1690",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1550,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1639,
                      "src": "702:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "702:33:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1555,
                  "nodeType": "ExpressionStatement",
                  "src": "702:33:6"
                }
              ]
            },
            "functionSelector": "e4849b32",
            "id": 1557,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sell",
            "nameLocation": "628:4:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1540,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1539,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "638:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1557,
                  "src": "633:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1538,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "633:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "632:14:6"
            },
            "returnParameters": {
              "id": 1541,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "656:0:6"
            },
            "scope": 1612,
            "src": "619:123:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1610,
              "nodeType": "Block",
              "src": "805:322:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "823:21:6",
                        "subExpression": {
                          "baseExpression": {
                            "id": 1565,
                            "name": "hasVoted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1489,
                            "src": "824:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1568,
                          "indexExpression": {
                            "expression": {
                              "id": 1566,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "833:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1567,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "833:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "824:20:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1564,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "815:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "815:30:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1571,
                  "nodeType": "ExpressionStatement",
                  "src": "815:30:6"
                },
                {
                  "assignments": [
                    1574
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1574,
                      "mutability": "mutable",
                      "name": "proposal",
                      "nameLocation": "872:8:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1610,
                      "src": "855:25:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Proposal_$1498_storage_ptr",
                        "typeString": "struct Govern.Proposal"
                      },
                      "typeName": {
                        "id": 1573,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1572,
                          "name": "Proposal",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1498,
                          "src": "855:8:6"
                        },
                        "referencedDeclaration": 1498,
                        "src": "855:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$1498_storage_ptr",
                          "typeString": "struct Govern.Proposal"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1578,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1575,
                      "name": "proposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1505,
                      "src": "883:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$1498_storage_$",
                        "typeString": "mapping(uint256 => struct Govern.Proposal storage ref)"
                      }
                    },
                    "id": 1577,
                    "indexExpression": {
                      "id": 1576,
                      "name": "_proposalId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1559,
                      "src": "893:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "883:22:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proposal_$1498_storage",
                      "typeString": "struct Govern.Proposal storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "855:50:6"
                },
                {
                  "condition": {
                    "id": 1579,
                    "name": "_supports",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1561,
                    "src": "919:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1599,
                    "nodeType": "Block",
                    "src": "1003:66:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 1597,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1590,
                              "name": "proposal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1574,
                              "src": "1017:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$1498_storage_ptr",
                                "typeString": "struct Govern.Proposal storage pointer"
                              }
                            },
                            "id": 1592,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "noCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1493,
                            "src": "1017:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 1594,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "1047:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1595,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1047:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1593,
                              "name": "balanceOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 986,
                              "src": "1037:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view returns (uint256)"
                              }
                            },
                            "id": 1596,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1037:21:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1017:41:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1598,
                        "nodeType": "ExpressionStatement",
                        "src": "1017:41:6"
                      }
                    ]
                  },
                  "id": 1600,
                  "nodeType": "IfStatement",
                  "src": "916:153:6",
                  "trueBody": {
                    "id": 1589,
                    "nodeType": "Block",
                    "src": "930:67:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 1587,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1580,
                              "name": "proposal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1574,
                              "src": "944:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$1498_storage_ptr",
                                "typeString": "struct Govern.Proposal storage pointer"
                              }
                            },
                            "id": 1582,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "yesCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1491,
                            "src": "944:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 1584,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "975:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1585,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "975:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1583,
                              "name": "balanceOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 986,
                              "src": "965:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view returns (uint256)"
                              }
                            },
                            "id": 1586,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "965:21:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "944:42:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1588,
                        "nodeType": "ExpressionStatement",
                        "src": "944:42:6"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 1601,
                          "name": "proposal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1574,
                          "src": "1079:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Proposal_$1498_storage_ptr",
                            "typeString": "struct Govern.Proposal storage pointer"
                          }
                        },
                        "id": 1605,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hasVoted",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1497,
                        "src": "1079:17:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1606,
                      "indexExpression": {
                        "expression": {
                          "id": 1603,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1097:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1604,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1097:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1079:29:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1607,
                      "name": "_supports",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1561,
                      "src": "1111:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1079:41:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1609,
                  "nodeType": "ExpressionStatement",
                  "src": "1079:41:6"
                }
              ]
            },
            "functionSelector": "c9d27afe",
            "id": 1611,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "vote",
            "nameLocation": "757:4:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1562,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1559,
                  "mutability": "mutable",
                  "name": "_proposalId",
                  "nameLocation": "767:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1611,
                  "src": "762:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1558,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "762:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1561,
                  "mutability": "mutable",
                  "name": "_supports",
                  "nameLocation": "785:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1611,
                  "src": "780:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1560,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "780:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "761:34:6"
            },
            "returnParameters": {
              "id": 1563,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "805:0:6"
            },
            "scope": 1612,
            "src": "748:379:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1613,
        "src": "81:1048:6",
        "usedErrors": []
      }
    ],
    "src": "32:1097:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.9+commit.e5eed63a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.10",
  "updatedAt": "2022-10-24T21:20:37.663Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}